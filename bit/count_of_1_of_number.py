# -*- coding: utf-8 -*-

# 求二进制中1的位数
"""
第一步：每2位为一组，组内高低位相加
      10 00 01 10  11 01 10 00
   -->01 00 01 01  10 01 01 00
第二步：每4位为一组，组内高低位相加
      0100 0101 1001 0100
   -->0001 0010 0011 0001
第三步：每8位为一组，组内高低位相加
      00010010 00110001
   -->00000011 00000100
第四步：每16位为一组，组内高低位相加
      00000011 00000100
   -->00000000 00000111

和二进制互逆差不多，只不过是组内高低位相加
a = ((a & 0xAAAA) >> 1) + (a & 0x5555);     // 第一步
a = ((a & 0xCCCC) >> 2) + (a & 0x3333);     // 第二步
a = ((a & 0xF0F0) >> 4) + (a & 0x0F0F);     // 第三步
a = ((a & 0xFF00) >> 8) + (a & 0x00FF);     // 第四步
"""

def solution(num):
    num = ((num & 0xAAAA) >> 1) + (num & 0x5555)
    num = ((num & 0xCCCC) >> 2) + (num & 0x3333)
    num = ((num & 0xF0F0) >> 4) + (num & 0x0F0F)
    num = ((num & 0xFF00) >> 8) + (num & 0x00FF)
    return num

if __name__ == '__main__':
    print(solution(1))
    print(solution(3))
    print(solution(5))
